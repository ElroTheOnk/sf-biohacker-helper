{"name":"Biohack Inhibitor","type":"script","author":"VIPKBLd6UbA5q62x","img":"modules/sf-biohacker-helper/artwork/BiohackInhibit.webp","scope":"global","command":"function BiohackMacro() {\n    if (!token) {\n        ui.notifications.warn(\"You must have a token selected.\");\n        return;\n    }\n\n    if (event.shiftKey) {\n        activateBiohack(token, token, \"Clear\");\n        return;\n    }\n    \n    if (game.user.targets.size !== 1) {\n        ui.notifications.error(\"You must target exactly one token.\");\n        return;\n    }\n\n    let targetArray = Array.from(game.user.targets);\n\n    biohackDialog(token, targetArray[0]).render(true);\n}\n\nfunction biohackDialog(pcToken, targetToken) {\n  const optsBiohack = [\n      {name: \"AC\"},\n      {name: \"DR\"},\n      {name: \"Energy Resist\"},\n      {name: \"Energy Vuln\"},\n      {name: \"Attacks [free]\"},\n      {name: \"Clear\"}\n  ]    \n  let biohack;\n\n  let content = `<p><strong>Character:</strong> ${pcToken.name}, <strong>Target:</strong> ${targetToken.name}<br/>`;\n  content += '</p>';\n  content += '<hr/>';\n  content += '<div class=\"form-group\">';\n  content += '<p><label>Biohack Type : </label><select id=\"biohackType\">';\n  for (let i = 0 ; i < optsBiohack.length ; i++) {\n    content += `<option value='${i}'`;\n    content += `>${optsBiohack[i].name}</option>`;\n  }\n  content += '</select></p>';\n  content += '</div>';\n\n  return new Dialog({\n    title: \"Biohack Inhibitor\",\n    content: content,\n    buttons: {\n      roll: {\n        icon: \"<i class='fas fa-check'></i>\",\n        label: \"Activate\",\n        callback: () => biohack = true,\n      },\n      cancel: {\n        icon: \"<i class='fas fa-times'></i>\",\n        label: \"Cancel\",\n        callback: () => biohack = false,\n      },\n    },\n    default: \"Activate\",\n    close: html => {\n        if (biohack) {\n            let chosenBiohack = optsBiohack[html.find('#biohackType')[0].value];\n            activateBiohack(pcToken, targetToken, chosenBiohack.name);\n        }\n    }\n  });\n}\n\nasync function activateBiohack(pcToken, targetToken, chosenBiohack) {\n    let msgContent = pcToken.name + \": \";\n    let myBiohack;\n    let applyingBiohack = true;\n    let biohackCost = 1;\n    let compendium = await game.packs.filter(p => p.documentName === 'Item' && p.metadata.name === \"shared-items\")[0].getDocuments();\n    let inhibitorAC = compendium.find(q => q.name === \"Inhibitor: AC\");\n    let inhibitorDR = compendium.find(q => q.name === \"Inhibitor: DR\");\n    let inhibitorER = compendium.find(q => q.name === \"Inhibitor: Energy Resist\");\n    let inhibitorEV = compendium.find(q => q.name === \"Inhibitor: Energy Vulnerability\");\n    let inhibitorAttack = compendium.find(q => q.name === \"Inhibitor: Attacks\");\n    let allBiohacks = [inhibitorAC, inhibitorDR, inhibitorER, inhibitorEV, inhibitorAttack];\n\n    switch(chosenBiohack) {\n        case 'Clear':\n           var i;\n           for(i=0; i<allBiohacks.length; i++){\n                let existing = targetToken.actor.items.find((e) => e.name === allBiohacks[i].name);\n                if (existing) {\n                    await targetToken.actor.deleteEmbeddedDocuments('Item', [existing.id]);\n\t\t    targetToken.toggleEffect(existing.img);\n                }\n            }\n            msgContent = msgContent + \"clearing biohack modifiers for \";\n            applyingBiohack = false;\n            break;\n        case 'AC':\n            myBiohack = inhibitorAC;\n            msgContent = msgContent + \"inhibiting <b>AC</b> of \";\n            break;\n        case 'DR':\n            myBiohack = inhibitorDR;\n            msgContent = msgContent + \"inhibiting <b>DR</b> of \";\n            break;\n        case 'Energy Resist':\n            myBiohack = inhibitorER;\n            msgContent = msgContent + \"inhibiting <b>Energy Resistance</b> of \";\n            break;\n        case 'Energy Vuln':\n            myBiohack = inhibitorEV;\n            msgContent = msgContent + \"inhibiting <b>Energy Vulnerability</b> of \";\n            break;\n        case 'Attacks [free]':\n            myBiohack = inhibitorAttack;\n            biohackCost = 0;\n            msgContent = msgContent + \"inhibiting <b>Attack</b> of \";\n            break;\n        default:\n    }\n\n    if (applyingBiohack) {\n        if (biohackCost === 1) {\n\t    const resource = pcToken.actor.getResource(\"biohacker\",\"biohacks\");\n\t    if (!resource) {\n\t        ui.notifications.error(\"Token does not have this resource available.\");\n\t        return;\n            } \n     \t\n\t    const baseValue = resource.system.base;\n\t    if (baseValue === 0) {\n\t        ui.notifications.warn(pcToken.name + \" has no biohacks remaining.\");\n\t        return;\n\t    } \n\t\n\t    pcToken.actor.setResourceBaseValue(\"biohacker\",\"biohacks\", baseValue - 1);\n        }\n\n\tconst item = myBiohack.toObject()\n\tawait targetToken.actor.createEmbeddedDocuments('Item', [item]);    \n\ttargetToken.toggleEffect(item.img);\n    }\n    \n    msgContent = msgContent + targetToken.name\n\n    let chatData = {\n        user: game.user.id,\n        content: msgContent,\n        whisper: [game.user.id],\n    };\n    ChatMessage.create(chatData, {});\n}\n\nBiohackMacro()","flags":{"core":{"sourceId":"Macro.YVxL6Gjc5AvqSTAW"}},"ownership":{"default":0,"uyE7Xaz9Y8jREYAd":3,"VIPKBLd6UbA5q62x":3},"_stats":{"systemId":"sfrpg","systemVersion":"0.23.0","coreVersion":"10.291","createdTime":1673183836075,"modifiedTime":1686260073639,"lastModifiedBy":"VIPKBLd6UbA5q62x"},"folder":null,"sort":0,"_id":"c1pCo4utOW8geczH"}
{"name":"Biohack Booster","type":"script","author":"VIPKBLd6UbA5q62x","img":"modules/sf-biohacker-helper/artwork/BiohackBoost.webp","scope":"global","command":"function BiohackMacro() {\n    if (!token) {\n        ui.notifications.warn(\"You must have a token selected.\");\n        return;\n    }\n\n    if (event.shiftKey) {\n        activateBiohack(token, token, \"Clear\");\n        return;\n    }\n    \n    if (game.user.targets.size !== 1) {\n        ui.notifications.error(\"You must target exactly one token.\");\n        return;\n    }\n\n    let targetArray = Array.from(game.user.targets);\n\n    biohackDialog(token, targetArray[0]).render(true);\n}\n\nfunction biohackDialog(pcToken, targetToken) {\n  const optsBiohack = [\n      {name: \"AC\"},\n      {name: \"Skill\"},\n      {name: \"Speed\"},\n      {name: \"Blindsense\"},\n      {name: \"Clear\"}\n  ]    \n  let biohack;\n\n  let content = `<p><strong>Character:</strong> ${pcToken.name}, <strong>Target:</strong> ${targetToken.name}<br/>`;\n  content += '</p>';\n  content += '<hr/>';\n  content += '<div class=\"form-group\">';\n  content += '<p><label>Biohack Type : </label><select id=\"biohackType\">';\n  for (let i = 0 ; i < optsBiohack.length ; i++) {\n    content += `<option value='${i}'`;\n    content += `>${optsBiohack[i].name}</option>`;\n  }\n  content += '</select></p>';\n  content += '</div>';\n\n  return new Dialog({\n    title: \"Biohack Booster\",\n    content: content,\n    buttons: {\n      roll: {\n        icon: \"<i class='fas fa-check'></i>\",\n        label: \"Activate\",\n        callback: () => biohack = true,\n      },\n      cancel: {\n        icon: \"<i class='fas fa-times'></i>\",\n        label: \"Cancel\",\n        callback: () => biohack = false,\n      },\n    },\n    default: \"Activate\",\n    close: html => {\n        if (biohack) {\n            let chosenBiohack = optsBiohack[html.find('#biohackType')[0].value];\n            activateBiohack(pcToken, targetToken, chosenBiohack.name);\n        }\n    }\n  });\n}\n\nasync function activateBiohack(pcToken, targetToken, chosenBiohack) {\n    let msgContent = pcToken.name + \": \";\n    let myBiohack;\n    let applyingBiohack = true;\n    let compendium = await game.packs.filter(p => p.documentName === 'Item' && p.metadata.name === \"shared-items\")[0].getDocuments();\n    let boosterAC = compendium.find(q => q.name === \"Booster: AC\");\n    let boosterSkill = compendium.find(q => q.name === \"Booster: Skill\");\n    let boosterSpeed = compendium.find(q => q.name === \"Booster: Speed\");\n    let boosterSense = compendium.find(q => q.name === \"Booster: Blindsense\");\n    let allBiohacks = [boosterAC, boosterSkill, boosterSpeed, boosterSense];\n\n    switch(chosenBiohack) {\n        case 'Clear':\n           var i;\n           for(i=0; i<allBiohacks.length; i++){\n                let existing = targetToken.actor.items.find((e) => e.name === allBiohacks[i].name);\n                if (existing) {\n                    await targetToken.actor.deleteEmbeddedDocuments('Item', [existing.id]);\n\t\t    targetToken.toggleEffect(existing.img);\n                }\n            }\n            msgContent = msgContent + \"clearing biohack modifiers for \";\n            applyingBiohack = false;\n            break;\n        case 'AC':\n            myBiohack = boosterAC;\n            msgContent = msgContent + \"granting <b>AC</b> bonus to \";\n            break;\n        case 'Skill':\n            myBiohack = boosterSkill;\n            msgContent = msgContent + \"granting <b>Skill</b> bonus to \";\n            break;\n        case 'Speed':\n            myBiohack = boosterSpeed;\n            msgContent = msgContent + \"granting <b>Speed</b> bonus to \";\n            break;\n        case 'Blindsense':\n            myBiohack = boosterSense;\n            msgContent = msgContent + \"granting <b>Blindsense</b> to \";\n            break;\n        default:\n    }\n\n    if (applyingBiohack) {\n\tconst resource = pcToken.actor.getResource(\"biohacker\",\"biohacks\");\n\tif (!resource) {\n\t    ui.notifications.error(\"Token does not have this resource available.\");\n\t    return;\n        } \n     \t\n\tconst baseValue = resource.system.base;\n\tif (baseValue === 0) {\n\t    ui.notifications.warn(pcToken.name + \" has no biohacks remaining.\");\n\t    return;\n\t} \n\t\n\tpcToken.actor.setResourceBaseValue(\"biohacker\",\"biohacks\", baseValue - 1);\n\tconst item = myBiohack.toObject()\n\tawait targetToken.actor.createEmbeddedDocuments('Item', [item]);    \n\ttargetToken.toggleEffect(item.img);\n    }\n    \n    msgContent = msgContent + targetToken.name\n\n    let chatData = {\n        user: game.user.id,\n        content: msgContent,\n        whisper: [game.user.id],\n    };\n    ChatMessage.create(chatData, {});\n}\n\nBiohackMacro()","flags":{"core":{"sourceId":"Macro.YVxL6Gjc5AvqSTAW"}},"ownership":{"default":0,"uyE7Xaz9Y8jREYAd":3,"VIPKBLd6UbA5q62x":3},"_stats":{"systemId":"sfrpg","systemVersion":"0.23.0","coreVersion":"10.291","createdTime":1673183833484,"modifiedTime":1686260066480,"lastModifiedBy":"VIPKBLd6UbA5q62x"},"folder":null,"sort":0,"_id":"rKbBMPkBIY0xBrsQ"}
